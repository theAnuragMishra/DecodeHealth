// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: orgs.sql

package database

import (
	"context"
)

const createOrg = `-- name: CreateOrg :exec
INSERT INTO orgs (name, kind, password_hash) VALUES ($1, $2, $3)
`

type CreateOrgParams struct {
	Name         string
	Kind         string
	PasswordHash string
}

func (q *Queries) CreateOrg(ctx context.Context, arg CreateOrgParams) error {
	_, err := q.db.Exec(ctx, createOrg, arg.Name, arg.Kind, arg.PasswordHash)
	return err
}

const getOrg = `-- name: GetOrg :one
SELECT id, name, created_at, kind, password_hash FROM orgs WHERE id = $1
`

func (q *Queries) GetOrg(ctx context.Context, id int32) (Org, error) {
	row := q.db.QueryRow(ctx, getOrg, id)
	var i Org
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.Kind,
		&i.PasswordHash,
	)
	return i, err
}
