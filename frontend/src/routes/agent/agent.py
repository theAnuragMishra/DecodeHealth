# -*- coding: utf-8 -*-
"""Agent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UjRG5N2rwZ37YJbhnAmEBVR82MmQ5uDK
"""

!pip install julep
from julep import Julep
julep = Julep(api_key="eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTAyMjM0MzIsImlhdCI6MTc0NTAzOTQzMiwic3ViIjoiNTMzNGQyMmEtNGU4NC01NTgxLTg4YjEtMWZiMmU5MTMzZDc1In0.WoX6iuiJ3wc8MsiGX8bsFBpo8F8k4bV2xy-XILxH0XLwauEWjvQxqgdQ4N8zyxKr9N1nFT8uXpSmBuYYB7ubEw")
agent = julep.agents.create(
    name="Lab Logistics Agent",
    model="gpt-4o"
)

import yaml

task_def = yaml.safe_load("""
name: Lab Delay and Load Analysis
description: Checks delays in sample deliveries and analyzes lab capacity using hardcoded data.

input_schema:
  type: object
  properties: {}

tools: []

main:
- evaluate:
    hardcoded_data: |-
      $ [
        {"type": "sample", "id": "S1", "expected_time": 2, "actual_time": 3},
        {"type": "sample", "id": "S2", "expected_time": 1, "actual_time": 1},
        {"type": "sample", "id": "S3", "expected_time": 1, "actual_time": 1},
        {"type": "sample", "id": "S4", "expected_time": 4, "actual_time": 6},
        {"type": "sample", "id": "S5", "expected_time": 1, "actual_time": 1},
        {"type": "sample", "id": "S6", "expected_time": 2, "actual_time": 3}




        {"type": "lab", "name": "Lab A", "current_load": 12, "max_capacity": 5},
        {"type": "lab", "name": "Lab B", "current_load": 5, "max_capacity": 5},
        {"type":"lab","name":"Lab C","current_load":9,"max_capacity":5}
      ]
- map:
    from: _.hardcoded_data
    to: _.results
    do:
      prompt:
      - role: system
        content: >-
          You are a lab logistics analysis agent. Your task is to:
            - Check for sample delays.
            - Analyze lab workloads for overcapacity.
            - Generate alerts and suggestions based on the analysis.
      - role: user
        content: >-
          Data: {_[0]}

          Perform the following tasks based on the data type:
          - If the data is a sample, check for delays and generate an alert if the actual time exceeds the expected time.
          - If the data is a lab, check for overload and generate a suggestion if the current load exceeds the maximum capacity.
      unwrap: true
- evaluate:
    final_report: |-
      $ '\\n'.join(_.results)
""")

import time
execution = agent.execute(task_def)

while True:
    execution = julep.executions.get(execution_id=execution.id)
    print(f"Status: {execution.status}")
    if execution.status in ["succeeded", "failed", "cancelled"]:
        print("System Report Generated")
        print(execution.output.get("final_report", "No report available"))
        break
    time.sleep(5)